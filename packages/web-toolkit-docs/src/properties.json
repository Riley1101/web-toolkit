{"Autocomplete":{"name":"Autocomplete","sourcePath":"src/lib/components/Autocomplete.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"value":{"value":"prop.string","required":false},"defaultValue":{"value":"prop.string","required":false},"options":{"value":"prop.arrayOf(prop.shape({\n    value: prop.oneOfType([prop.string, prop.number]),\n    label: prop.node,\n  }))","required":false,"description":"The options shown in the list"},"enableFilter":{"value":"prop.bool","required":false,"description":"Enables basic filtering of options.\nSet to `false` if you want to implement your own filtering."},"onChange":{"value":"prop.func","required":false,"description":"Called when the value changes (may prevent the value from updating, in conjuction with `value`)"},"onSearch":{"value":"prop.func","required":false,"description":"Called when the value changes (passive)"}},"defaultProps":{"defaultValue":{"value":"''"},"enableFilter":{"value":"true"},"options":{"value":"[]"}}}}},"Box":{"name":"Box","sourcePath":"src/lib/components/Box.js","exports":{"default":{"propTypes":{"align":{"value":"prop.oneOf([true, 'start', 'end'])","required":false},"justify":{"value":"prop.oneOf([true, 'start', 'end'])","required":false}}}}},"Button":{"name":"Button","sourcePath":"src/lib/components/Button.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"icon":{"value":"prop.string","required":false,"description":"An icon name"},"type":{"value":"prop.string","required":false,"description":"HTML button type"},"loading":{"value":"prop.bool","required":false,"description":"Shows a spinner and disables the button"},"circular":{"value":"prop.bool","required":false,"description":"Round style button"},"flat":{"value":"prop.bool","required":false,"description":"Flat style button"},"link":{"value":"prop.bool","required":false,"description":"Link style button"},"primary":{"value":"prop.bool","required":false,"description":"Primary style button"},"danger":{"value":"prop.bool","required":false,"description":"Danger style button"},"active":{"value":"prop.bool","required":false,"description":"Active state"},"hover":{"value":"prop.bool","required":false,"description":"Hover state"},"text":{"value":"prop.bool","required":false,"description":"Button containing text"},"image":{"value":"prop.bool","required":false,"description":"Button containing an image only"}},"defaultProps":{"size":{"value":"'medium'"},"type":{"value":"'button'"}}}}},"Calendar":{"name":"Calendar","sourcePath":"src/lib/components/Calendar.js","exports":{"default":{"propTypes":{"value":{"value":"prop.object","required":false},"onChange":{"value":"prop.func","required":false}}}}},"Checkbox":{"name":"Checkbox","sourcePath":"src/lib/components/Checkbox.js","exports":{"default":{"propTypes":{"label":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"showLabel":{"value":"prop.bool","required":false},"value":{"value":"prop.bool","required":false},"defaultValue":{"value":"prop.bool","required":false},"onChange":{"value":"prop.func","required":false}},"defaultProps":{"showLabel":{"value":"true"},"size":{"value":"'medium'"},"onChange":{"value":"noop"}}}}},"DatePicker":{"name":"DatePicker","sourcePath":"src/lib/components/DatePicker.js","exports":{"default":{"propTypes":{"value":{"value":"prop.object","required":false,"description":"A date object"},"defaultValue":{"value":"prop.object","required":false,"description":"A date object"},"format":{"value":"prop.string","required":false},"onChange":{"value":"prop.func","required":false,"description":"A function that receives a date object"}},"defaultProps":{"format":{"value":"'d MMM yyyy'"}}}}},"Dropdown":{"name":"Dropdown","sourcePath":"src/lib/components/Dropdown.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false,"description":"className of the component's popover"},"triggerClassName":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"align":{"value":"prop.oneOf(['left', 'right'])","required":false},"label":{"value":"prop.node","required":false},"value":{"value":"prop.any","required":false},"options":{"value":"prop.arrayOf(prop.shape({\n      value: prop.any.isRequired,\n      label: prop.node.isRequired,\n      data: prop.object,\n    }))","required":false},"disabled":{"value":"prop.bool","required":false},"loading":{"value":"prop.bool","required":false},"open":{"value":"prop.bool","required":false},"allowClear":{"value":"prop.bool","required":false},"input":{"value":"prop.bool","required":false},"filterKey":{"value":"prop.string","required":false},"filter":{"value":"prop.func","required":false},"onClose":{"value":"prop.func","required":false},"onOpen":{"value":"prop.func","required":false}},"defaultProps":{"size":{"value":"'medium'"},"align":{"value":"'right'"},"disabled":{"value":"false"}}}}},"Expander":{"name":"Expander","sourcePath":"src/lib/components/Expander.js","exports":{"default":{"propTypes":{"children":{"value":"prop.node","required":false},"className":{"value":"prop.string","required":false},"size":{"value":"prop.number","required":false},"open":{"value":"prop.bool","required":false,"description":"Expanded state"},"defaultOpen":{"value":"prop.bool","required":false},"trigger":{"value":"prop.oneOfType([prop.node, prop.func])","required":false,"description":"The element that triggers toggling the expander.\nIf not set, a default unstyled button will be displayed.\nIf it's a render function, it received an argument: ({ toggle: Fn })"},"label":{"value":"prop.node","required":false,"description":"The label for the default button trigger element\n(only if `trigger` is not set)"},"transition":{"value":"prop.oneOf(['horizontal', 'vertical'])","required":false},"iconPosition":{"value":"prop.oneOf(['before', 'after', false])","required":false,"description":"Arrow position"},"contents":{"value":"prop.bool","required":false,"description":"If true, the trigger is rendered outside the Expander container"},"fitContent":{"value":"prop.bool","required":false,"description":"If true, the container fits its content size"},"onChange":{"value":"prop.func","required":false,"description":"Called when the open state changes"}},"defaultProps":{"transition":{"value":"'vertical'"},"iconPosition":{"value":"'after'"},"contents":{"value":"false"}}}}},"Frame":{"name":"Frame","sourcePath":"src/lib/components/Frame.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"label":{"value":"prop.node","required":false,"description":"The label of the frame (using <fieldset>/<legend>)"},"background":{"value":"prop.oneOf(['low', 'default', 'medium', 'high'])","required":false,"description":"The background color"},"inline":{"value":"prop.bool","required":false,"description":"If true, is displayed as an inline element"},"scrollable":{"value":"prop.bool","required":false,"description":"If true, is scrollable"},"border":{"value":"prop.bool","required":false,"description":"If true, shows a border"}},"defaultProps":{"border":{"value":"true"}}}}},"HeaderBar":{"name":"HeaderBar","sourcePath":"src/lib/components/HeaderBar.js","exports":{"default":{}}},"Icon":{"name":"Icon","sourcePath":"src/lib/components/Icon.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"name":{"value":"prop.string.isRequired","required":true,"description":"The icon name"},"colored":{"value":"prop.bool","required":false}},"defaultProps":{"colored":{"value":"false"}}},"OptimizedIcon":{}}},"InfoBar":{"name":"InfoBar","sourcePath":"src/lib/components/InfoBar.js","exports":{"default":{}}},"Input":{"name":"Input","sourcePath":"src/lib/components/Input.js","exports":{"default":{"propTypes":{"type":{"value":"prop.string","required":false,"description":"The HTML input type"},"value":{"value":"prop.string","required":false},"defaultValue":{"value":"prop.string","required":false},"className":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false,"description":"Size of the input"},"loading":{"value":"prop.bool","required":false,"description":"Shows a loading indicator"},"icon":{"value":"prop.node","required":false,"description":"Icon name or node (left)"},"iconAfter":{"value":"prop.node","required":false,"description":"Icon name or node (right)"},"placeholder":{"value":"prop.string","required":false},"disabled":{"value":"prop.bool","required":false,"description":"Disabled input"},"flat":{"value":"prop.bool","required":false,"description":"Flat style input"},"error":{"value":"prop.bool","required":false,"description":"Error style input"},"warning":{"value":"prop.bool","required":false,"description":"Warning style input"},"progress":{"value":"prop.oneOfType([prop.bool, prop.number])","required":false,"description":"Show a progress bar of `progress` percent size if it's a number,\nor an undeterminate (loading) bar if `true`"},"allowClear":{"value":"prop.bool","required":false,"description":"Show a button to clear the input value"},"onChange":{"value":"prop.func","required":false,"description":"Called when the input value changes, with the new value"},"onAccept":{"value":"prop.func","required":false,"description":"Called when Enter is pressed (prevents default behavior)"},"onClickIconAfter":{"value":"prop.func","required":false,"description":"Called when the `iconAfter` is clicked"}},"defaultProps":{"type":{"value":"'text'"},"size":{"value":"'medium'"},"onChange":{"value":"noop"}}}}},"InputNumber":{"name":"InputNumber","sourcePath":"src/lib/components/InputNumber.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"vertical":{"value":"prop.bool","required":false},"disabled":{"value":"prop.bool","required":false},"value":{"value":"prop.number","required":false},"defaultValue":{"value":"prop.number","required":false},"step":{"value":"prop.number","required":false},"min":{"value":"prop.number","required":false},"max":{"value":"prop.number","required":false},"onChange":{"value":"prop.func","required":false}},"defaultProps":{"size":{"value":"'medium'"},"onChange":{"value":"noop"}}}}},"Label":{"name":"Label","sourcePath":"src/lib/components/Label.js","exports":{"default":{"propTypes":{"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false}}}}},"LevelBar":{"name":"LevelBar","sourcePath":"src/lib/components/LevelBar.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"vertical":{"value":"prop.bool","required":false},"value":{"value":"prop.number","required":false,"description":"The number active of segments"},"segments":{"value":"prop.number","required":false,"description":"The number of segments"},"level":{"value":"prop.oneOf(['empty', 'danger', 'warning', 'info' , 'success'])","required":false,"description":"The coloration of the active segments"}},"defaultProps":{"value":{"value":"0"},"segments":{"value":"5"}}}}},"List":{"name":"List","sourcePath":"src/lib/components/List.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"separators":{"value":"prop.bool","required":false},"horizontal":{"value":"prop.bool","required":false},"rich":{"value":"prop.bool","required":false}},"defaultProps":{"separators":{"value":"true"}}}}},"Menu":{"name":"Menu","sourcePath":"src/lib/components/Menu.js","exports":{"default":{}}},"MenuBar":{"name":"MenuBar","sourcePath":"src/lib/components/MenuBar.js","exports":{"default":{}}},"Notebook":{"name":"Notebook","sourcePath":"src/lib/components/Notebook.js","exports":{"default":{"propTypes":{"children":{"value":"prop.node","required":false},"position":{"value":"prop.oneOf(['top', 'bottom', 'left', 'right'])","required":false},"transition":{"value":"PageSwitcher.propTypes.transition","required":false},"arrows":{"value":"prop.bool","required":false},"className":{"value":"prop.string","required":false},"value":{"value":"prop.number","required":false},"pages":{"value":"PageSwitcher.propTypes.pages","required":false},"action":{"value":"prop.node","required":false},"onChange":{"value":"prop.func","required":false},"onClose":{"value":"prop.func","required":false}},"defaultProps":{"position":{"value":"'top'"},"arrows":{"value":"false"},"onChange":{"value":"noop"},"onClose":{"value":"noop"}}}}},"PageSwitcher":{"name":"PageSwitcher","sourcePath":"src/lib/components/PageSwitcher.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"pages":{"value":"prop.arrayOf(prop.shape({\n      key: prop.oneOfType([prop.string, prop.number]).isRequired,\n      label: prop.node,\n      content: prop.node.isRequired,\n    }))","required":false},"mainPage":{"value":"prop.number","required":false},"activePage":{"value":"prop.number","required":false},"transition":{"value":"prop.oneOf(['horizontal', 'vertical', 'opacity', false])","required":false},"expand":{"value":"prop.bool","required":false},"padded":{"value":"prop.bool","required":false},"useMainPageDimensions":{"value":"prop.oneOf([prop.bool, 'width', 'height'])","required":false}},"defaultProps":{"transition":{"value":"'horizontal'"},"expand":{"value":"false"},"useMainPageDimensions":{"value":"false"}}}}},"Paned":{"name":"Paned","sourcePath":"src/lib/components/Paned.js","exports":{"default":{"propTypes":{"children":{"value":"prop.arrayOf(prop.node)","required":false},"className":{"value":"prop.string","required":false},"orientation":{"value":"prop.oneOf(['horizontal', 'vertical'])","required":false},"size":{"value":"prop.number","required":false},"defaultSize":{"value":"prop.number","required":false},"border":{"value":"prop.oneOf([true, false, 'handle'])","required":false},"fill":{"value":"prop.oneOf([true, false, 'width', 'height'])","required":false}},"defaultProps":{"orientation":{"value":"'horizontal'"},"border":{"value":"true"}}}}},"Popover":{"name":"Popover","sourcePath":"src/lib/components/Popover.js","exports":{"default":{"propTypes":{"className":{"value":"prop.string","required":false},"open":{"value":"prop.bool","required":false},"arrow":{"value":"prop.bool","required":false},"content":{"value":"prop.oneOfType([prop.node, prop.func]).isRequired","required":true},"children":{"value":"prop.object","required":false},"placement":{"value":"prop.oneOf(PLACEMENTS)","required":false},"align":{"value":"prop.oneOf(['right', 'left'])","required":false},"method":{"value":"prop.oneOf(['mouseover', 'click', 'click-controlled', 'none'])","required":false},"width":{"value":"prop.oneOf(['trigger', 'trigger-min'])","required":false},"delay":{"value":"prop.number","required":false},"shouldUpdatePlacement":{"value":"prop.bool","required":false},"shouldAttachEarly":{"value":"prop.bool","required":false},"onOpen":{"value":"prop.func","required":false},"onClose":{"value":"prop.func","required":false},"onDidOpen":{"value":"prop.func","required":false},"onDidClose":{"value":"prop.func","required":false}},"defaultProps":{"arrow":{"value":"true"},"placement":{"value":"'bottom'"},"align":{"value":"'right'"},"method":{"value":"'click'"},"delay":{"value":"200"},"shouldUpdatePlacement":{"value":"true"},"onOpen":{"value":"NOOP"},"onClose":{"value":"NOOP"},"onDidOpen":{"value":"NOOP"},"onDidClose":{"value":"NOOP"}}}}},"PopoverMenu":{"name":"PopoverMenu","sourcePath":"src/lib/components/PopoverMenu.js","exports":{"default":{"propTypes":{"pages":{"value":"prop.func","required":false}}}}},"Progress":{"name":"Progress","sourcePath":"src/lib/components/Progress.js","exports":{"default":{"propTypes":{"aria-label":{"value":"prop.string","required":false},"aria-labelledby":{"value":"prop.string","required":false},"aria-valuetext":{"value":"prop.string","required":false},"className":{"value":"prop.string","required":false},"orientation":{"value":"prop.oneOf(['horizontal', 'vertical'])","required":false,"description":"The slider orientation."},"value":{"value":"prop.number","required":false,"description":"The value of the slider. For indeterminate pass undefined."},"label":{"value":"prop.oneOfType([prop.bool, prop.node])","required":false,"description":"If a label should be shown"}}}}},"Radio":{"name":"Radio","sourcePath":"src/lib/components/Radio.js","exports":{"default":{"propTypes":{"label":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"showLabel":{"value":"prop.bool","required":false},"value":{"value":"prop.bool","required":false},"defaultValue":{"value":"prop.bool","required":false},"onChange":{"value":"prop.func","required":false}},"defaultProps":{"showLabel":{"value":"true"},"size":{"value":"'medium'"},"onChange":{"value":"noop"}}}}},"Range":{"name":"Range","sourcePath":"src/lib/components/Range.js","exports":{"default":{"propTypes":{"aria-label":{"value":"prop.string","required":false},"aria-labelledby":{"value":"prop.string","required":false},"aria-valuetext":{"value":"prop.string","required":false},"className":{"value":"prop.string","required":false},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"defaultValue":{"value":"prop.oneOfType([prop.number, prop.arrayOf(prop.number)])","required":false,"description":"The default element value. Use when the component is not controlled."},"disabled":{"value":"prop.bool","required":false,"description":"If `true`, the slider will be disabled."},"marks":{"value":"prop.oneOfType([prop.bool, prop.array])","required":false,"description":"\nMarks indicate predetermined values to which the user can move the slider.\nIf `true` the marks will be spaced according the value of the `step` prop.\nIf an array, it should contain objects with `value` and an optional `label` keys.\n"},"max":{"value":"prop.number","required":false,"description":"\nThe maximum allowed value of the slider.\nShould not be equal to min.\n"},"min":{"value":"prop.number","required":false,"description":"\nThe minimum allowed value of the slider.\nShould not be equal to max.\n"},"name":{"value":"prop.string","required":false,"description":"\nName attribute of the hidden `input` element.\n"},"onChange":{"value":"prop.func","required":false,"description":"\nCallback function that is fired when the slider's value changed.\n\n@param {number | number[]} value The new value.\n@param {object} event The event source of the callback.\n"},"onChangeCommitted":{"value":"prop.func","required":false,"description":"\nCallback function that is fired when the `mouseup` is triggered.\n\n@param {object} event The event source of the callback.\n@param {number | number[]} value The new value.\n"},"onMouseDown":{"value":"prop.func","required":false,"description":"\n@ignore\n"},"vertical":{"value":"prop.bool","required":false,"description":"\nIf the slider is vertical.\n"},"scale":{"value":"prop.func","required":false,"description":"\nA transformation function, to change the scale of the slider.\n"},"step":{"value":"prop.number","required":false,"description":"\nThe granularity with which the slider can step through values. (A \"discrete\" slider.)\nThe `min` prop serves as the origin for the valid values.\nWe recommend (max - min) to be evenly divisible by the step.\n\nWhen step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.\n"},"ThumbComponent":{"value":"prop.elementType","required":false,"description":"\nThe component used to display the value label.\n"},"track":{"value":"prop.oneOf(['normal', false, 'inverted'])","required":false,"description":"\nThe track presentation:\n\n- `normal` the track will render a bar representing the slider value.\n- `inverted` the track will render a bar representing the remaining slider value.\n- `false` the track will render without a bar.\n"},"value":{"value":"prop.oneOfType([prop.number, prop.arrayOf(prop.number)])","required":false,"description":"\nThe value of the slider.\nFor ranged sliders, provide an array with two values.\n"},"valueLabelDisplay":{"value":"prop.oneOf(['on', 'auto', 'off'])","required":false,"description":"\nControls when the value label is displayed:\n\n- `auto` the value label will display when the thumb is hovered or focused.\n- `on` will display persistently.\n- `off` will never display.\n"},"valueLabelFormat":{"value":"prop.oneOfType([prop.string, prop.func])","required":false,"description":"\nThe format function the value label's value.\n\nWhen a function is provided, it should have the following signature:\n\n- {number} value The value label's value to format\n- {number} index The value label's index to format\n"}}}}},"Separator":{"name":"Separator","sourcePath":"src/lib/components/Separator.js","exports":{"default":{}}},"Spinner":{"name":"Spinner","sourcePath":"src/lib/components/Spinner.js","exports":{"default":{}}},"Switch":{"name":"Switch","sourcePath":"src/lib/components/Switch.js","exports":{"default":{"propTypes":{"value":{"value":"prop.bool","required":false},"defaultValue":{"value":"prop.bool","required":false},"label":{"value":"prop.string","required":false,"description":"Not shown. For screen-readers only"},"labels":{"value":"prop.oneOfType([prop.bool, prop.arrayOf(prop.string)])","required":false,"description":"On/Off if `true`, or provide your own 2 labels"},"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"onChange":{"value":"prop.func","required":false}},"defaultProps":{"size":{"value":"'medium'"},"labels":{"value":"false"},"onChange":{"value":"noop"}}}}},"Table":{"name":"Table","sourcePath":"src/lib/components/Table.js","exports":{"default":{}}},"Text":{"name":"Text","sourcePath":"src/lib/components/Text.js","exports":{"default":{"propTypes":{"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false},"weight":{"value":"prop.oneOf([100, 300, 400, 700, 900])","required":false}},"defaultProps":{"as":{"value":"'p'"}}}}},"TextArea":{"name":"TextArea","sourcePath":"src/lib/components/TextArea.js","exports":{"default":{"propTypes":{"size":{"value":"prop.oneOf(['mini', 'small', 'medium', 'large', 'huge'])","required":false}},"defaultProps":{"size":{"value":"'medium'"}}}}},"Toolbar":{"name":"Toolbar","sourcePath":"src/lib/components/Toolbar.js","exports":{"default":{}}}}